server.port= 9098


#defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde


#page view out
spring.cloud.stream.bindings.pvout.destination=pvs
spring.cloud.stream.bindings.pvout.producer.headerMode=raw

spring.cloud.stream.bindings.pvin.destination=pvs
spring.cloud.stream.bindings.pvin.consumer.headerMode=raw


#page count out
spring.cloud.stream.bindings.pcout.destination=pcs
spring.cloud.stream.bindings.pcout.producer..useNativeEncoding=true
spring.cloud.stream.kafka.streams.bindings.pcout.producer.keySerde= org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pcout.producer.valueSerde= org.apache.kafka.common.serialization.Serdes$LongSerde



#page count in
spring.cloud.stream.bindings.pcin.destination=pcs
spring.cloud.stream.bindings.pcin.consumer.useNativeDecoding=true
spring.cloud.stream.bindings.pcin.group = pcs
spring.cloud.stream.bindings.pcin.contentType = application/json
spring.cloud.stream.bindings.pcin.consumer.headerMode =raw
spring.cloud.stream.kafka.streams.bindings.pcin.consumer.keySerde= org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pcin.consumer.valueSerde= org.apache.kafka.common.serialization.Serdes$LongSerde

